import type { Metadata } from "next"
import { Card, Tag, Rate, Image, Steps } from "antd"
import { ClockCircleOutlined, UserOutlined, FireOutlined, StarOutlined } from "@ant-design/icons"

export const metadata: Metadata = {
  title: "Recipes Detail page",
  description: "Generated by Muhammadumar",
}

interface Recipe {
  id: number
  name: string
  ingredients: string[]
  instructions: string[]
  prepTimeMinutes: number
  cookTimeMinutes: number
  servings: number
  difficulty: string
  cuisine: string
  caloriesPerServing: number
  tags: string[]
  userId: number
  image: string
  rating: number
  reviewCount: number
}

interface Props {
  params: {
    recipesDetail: string
  }
}

const RecipesDetail = async ({ params }: Props) => {
  const id = await params.recipesDetail

  try {
    const data = await fetch(`https://dummyjson.com/recipes/${id}`)

    if (!data.ok) {
      throw new Error("Recipe not found")
    }

    const recipe: Recipe = await data.json()
    const totalTime = recipe.prepTimeMinutes + recipe.cookTimeMinutes

    return (
      <div className="min-h-screen bg-gray-50 py-8">
        <div className="max-w-4xl mx-auto px-4">
          <Card className="mb-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div>
                <Image
                  src={recipe.image || "/placeholder.svg"}
                  alt={recipe.name}
                  className="w-full rounded-lg"
                  fallback="/placeholder.svg?height=300&width=400"
                />
              </div>

              <div className="space-y-4">
                <h1 className="text-3xl font-bold text-gray-900">{recipe.name}</h1>

                <div className="flex items-center gap-2">
                  <Rate disabled defaultValue={recipe.rating} allowHalf />
                  <span className="text-gray-600">({recipe.reviewCount} reviews)</span>
                </div>

                <div className="flex flex-wrap gap-2">
                  <Tag color="blue">{recipe.cuisine}</Tag>
                  <Tag color="green">{recipe.difficulty}</Tag>
                  {recipe.tags.slice(0, 3).map((tag, index) => (
                    <Tag key={index} color="orange">
                      {tag}
                    </Tag>
                  ))}
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="flex items-center gap-2">
                    <ClockCircleOutlined />
                    <div>
                      <p className="text-sm text-gray-500">Total Time</p>
                      <p className="font-semibold">{totalTime} mins</p>
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <UserOutlined />
                    <div>
                      <p className="text-sm text-gray-500">Servings</p>
                      <p className="font-semibold">{recipe.servings} people</p>
                    </div>
                  </div>
                </div>

                <div className="flex items-center gap-2">
                  <FireOutlined />
                  <span className="text-lg font-semibold text-orange-600">
                    {recipe.caloriesPerServing} calories per serving
                  </span>
                </div>
              </div>
            </div>
          </Card>

          <Card className="mb-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
              <div>
                <p className="text-2xl font-bold text-blue-600">{recipe.prepTimeMinutes}</p>
                <p className="text-gray-600">Prep Time (mins)</p>
              </div>
              <div>
                <p className="text-2xl font-bold text-green-600">{recipe.cookTimeMinutes}</p>
                <p className="text-gray-600">Cook Time (mins)</p>
              </div>
              <div>
                <p className="text-2xl font-bold text-orange-600">{totalTime}</p>
                <p className="text-gray-600">Total Time (mins)</p>
              </div>
            </div>
          </Card>

          <Card title="Ingredients" className="mb-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
              {recipe.ingredients.map((ingredient, index) => (
                <div key={index} className="flex items-center gap-2 py-1">
                  <span className="w-2 h-2 bg-blue-500 rounded-full"></span>
                  <span>{ingredient}</span>
                </div>
              ))}
            </div>
          </Card>

         
        </div>
      </div>
    )
  } catch (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Card className="max-w-md mx-auto">
          <div className="text-center py-8">
            <StarOutlined className="text-4xl text-gray-400 mb-4" />
            <h2 className="text-xl font-semibold text-gray-900 mb-2">Recipe Not Found</h2>
            <p className="text-gray-600">The recipe you're looking for doesn't exist.</p>
          </div>
        </Card>
      </div>
    )
  }
}

export default RecipesDetail
